{"version":3,"sources":["data/phrases.js","RantCard.js","Rants.js","data/characterNames.js","Form.js","SavedRants.js","App.js","reportWebVitals.js","index.js"],"names":["intros","intros2","randomGripe","RantCard","props","alsoAppearsIn","availability","name","images","saveRant","randomInt","Math","round","random","introSwitch","rantId","className","id","onClick","Rants","data","selection","rantCollection","matchingCharacter","find","character","push","characterRants","map","characters","order","length","characterNames","Form","componentDidMount","characterList","value","setState","characterOptions","state","selectedCharacter","onSubmit","this","submitCharacter","for","type","Component","SavedRants","savedRants","console","log","savedCards","card","text","App","fetch","then","response","json","characterData","allCharacters","event","preventDefault","characterToSet","document","getElementById","classList","add","querySelector","characterName","innerText","rantText","savedRant","exact","to","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iXAAaA,G,MAAS,CACpB,0BACA,8BACA,wCACA,2CACA,qCACA,wBACA,oCACA,kDACA,gCACA,qCACA,+CAGWC,EAAU,CACrB,uDACA,qFACA,kFACA,8DACA,qEACA,4FACA,qGACA,kGACA,8CACA,oEACA,yFAGWC,EAAc,CACzB,gDACA,iEACA,gFACA,mGACA,kEACA,mGACA,wFACA,uFACA,iHACA,qHACA,oG,OCXaC,EArBE,SAACC,GACgDA,EAAxDC,cAAwDD,EAAzCE,aAAyCF,EAA3BG,KAA2BH,EAArBI,OAA3C,IAAmDC,EAAaL,EAAbK,SAE7CC,EAAYC,KAAKC,MAAuB,GAAhBD,KAAKE,UAC7BC,EAAcJ,EAAY,EAAI,EAC9BK,EAASJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAE/B,OACE,sBAAKG,UAAU,YAAYC,GAAIF,EAA/B,UACE,sBAAKC,UAAU,sBAAf,UACE,oBAAIA,UAAU,iBAAiBC,GAAG,gBAAlC,SAAmDb,EAAMG,OACzD,sBAAKS,UAAU,YAAYC,GAAG,WAA9B,UACmB,IAAhBH,GAAqB,+BAAKd,EAAOU,GAAYN,EAAMG,KAA9B,KAAsCL,EAAYQ,MACvD,IAAhBI,GAAqB,+BAAKb,EAAQS,GAAYN,EAAMG,KAA/B,KAAuCL,EAAYQ,YAG7E,wBAAQM,UAAU,mBAAmBE,QAAST,QCarCU,G,MA/BD,SAACf,GACb,IAAQgB,EAA8BhB,EAA9BgB,KAAMC,EAAwBjB,EAAxBiB,UAAWZ,EAAaL,EAAbK,SACnBa,EAAiB,GACjBC,EAAoBH,EAAKI,MAAM,SAAAC,GAAS,OAAIA,EAAUlB,OAASc,KACrEC,EAAeI,KAAKH,GAEpB,IAAMI,EAAiBL,EAAeM,KAAK,SAAAH,GACzC,GAAIA,EACF,OACE,cAAC,EAAD,CACEI,WAAYT,EAEZb,KAAMkB,EAAUlB,KAChBF,cAAeoB,EAAUpB,cACzBC,aAAcmB,EAAUnB,aACxBwB,MAAOL,EAAUK,MACjBrB,SAAUA,GALLE,KAAKE,aAWlB,OACE,yBAASG,UAAU,kBAAnB,SACE,qBAAKA,UAAU,eAAf,SACGM,EAAeS,QAAUJ,Q,QC9BrBK,G,MAAiB,CAC5B,QAAiB,cAAoB,OAAoB,QACzD,aAAiB,QAAoB,QAAoB,MACzD,UAAiB,QAAoB,OAAoB,iBACzD,aAAiB,QAAoB,QAAoB,SACzD,eAAiB,QAAoB,QAAoB,YACzD,QAAiB,QAAoB,QAAoB,SACzD,aAAiB,YAAoB,SAAoB,MACzD,QAAiB,mBAAoB,cAAoB,MACzD,WAAiB,kBAAoB,QAAoB,QACzD,MAAiB,qBAAoB,aAAoB,QACzD,QAAiB,cAAoB,SAAoB,UACzD,SAAiB,YAAoB,OAAoB,WACzD,WAAiB,kBAAoB,kBAAoB,aACzD,WAAiB,cAAoB,mBAAoB,aACzD,WAAiB,UAAoB,QAAoB,QACzD,aAAiB,YAAoB,MAAoB,MACzD,QAAiB,YAAoB,SAAoB,QACzD,UAAiB,eAAoB,WAAoB,aACzD,gBAAiB,QAAoB,OAAoB,kBACzD,QAAiB,SAAoB,YCoBxBC,E,kDAnCb,WAAY7B,GAAQ,IAAD,8BACjB,gBAOF8B,kBAAoB,WAClB,IAAMC,EAAgBH,EAAeJ,KAAK,SAAAH,GACxC,OACE,yBAAQW,MAAOX,EAAf,cAAgDA,IAAjBd,KAAKE,aAGxC,EAAKwB,SAAS,CAAEC,iBAAkBH,KAZlC,EAAKI,MAAQ,CACXD,iBAAkB,GAClBE,kBAAmB,IAJJ,E,0CAkBnB,WAAU,IAAD,EACP,OACE,qBAAKxB,UAAU,iBAAiBC,GAAG,gBAAnC,SACE,uBAAMD,UAAU,2BAA2BC,GAAG,yBAAyBwB,SAAUC,KAAKtC,MAAMuC,gBAA5F,UACE,uBAAOC,IAAI,sBAAsB5B,UAAU,iBAA3C,kCACA,2BAAQC,GAAG,qBAAqBV,KAAK,aAAaS,UAAU,sBAA5D,mBAAoF,qBAApF,yBACG0B,KAAKH,MAAMD,kBADd,IAGA,qBAAKtB,UAAU,0BAAf,SACE,wBAAQ6B,KAAK,SAAS7B,UAAU,0BAA0BC,GAAG,eAA7D,qC,GA5BO6B,aCyBJC,G,MAxBI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACnBC,QAAQC,IAAIF,GACZ,IAAMG,EAAaH,EAAWpB,KAAK,SAAAwB,GACjC,OACE,qBAAKpC,UAAU,YAAYC,GAAImC,EAAKnC,GAApC,SACE,sBAAKD,UAAU,sBAAf,UACE,oBAAIA,UAAU,iBAAiBC,GAAG,gBAAlC,SAAmDmC,EAAK7C,OACxD,qBAAKS,UAAU,YAAYC,GAAG,WAA9B,SACGmC,EAAKC,eAOhB,OACE,qBAAKrC,UAAU,wBAAf,SACE,yBAASA,UAAU,cAAnB,SACGmC,QCwDMG,E,kDAlEb,aAAe,IAAD,8BACZ,gBAQFpB,kBAAoB,WAClBqB,MAAM,8BACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAApC,GACJ,IAAMuC,EAAgBvC,EACtB,EAAKiB,SAAS,CAAEuB,cAAeD,QAdrB,EAkBdhB,gBAAkB,SAACkB,GACjBA,EAAMC,iBACN,IACMC,EADoBC,SAASC,eAAe,qBACT7B,MACzC,EAAKC,SAAS,CAAEG,kBAAmBuB,IAEbC,SAASC,eAAe,iBAChCC,UAAUC,IAAI,YAzBhB,EA4Bd1D,SAAW,SAACoD,GACGG,SAASI,cAAc,cAChBnD,GADpB,IAGMoD,EAAgBL,SAASC,eAAe,iBAAiBK,UACzDC,EAAWP,SAASC,eAAe,YAAYK,UACjDE,EAAY,CAAEvD,GAAK,EAAKsB,MAAMS,WAAWjB,OAAS,EAAIxB,KAAM8D,EAAehB,KAAMkB,GACrF,EAAKlC,SAAS,CAAEW,WAAW,GAAD,mBAAM,EAAKT,MAAMS,YAAjB,CAA6BwB,OAjCvD,EAAKjC,MAAQ,CACXqB,cAAe,GACfpB,kBAAmB,GACnBQ,WAAY,IALF,E,0CAsCd,WACE,OACE,cAAC,IAAD,UACE,iCACE,mEACA,cAAC,IAAD,CAASyB,OAAK,EAACC,GAAG,eAAe1D,UAAU,2BAA3C,yBACA,cAAC,IAAD,CAASyD,OAAK,EAACC,GAAG,IAAI1D,UAAU,oBAAhC,kBACA,qBAAKA,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2D,KAAK,IAAIC,QACd,qCACE,cAAC,EAAD,CAAOxD,KAAMsB,KAAKH,MAAMqB,cAAevC,UAAWqB,KAAKH,MAAMC,kBAAmB/B,SAAUiC,KAAKjC,WAC/F,cAAC,EAAD,CAAMkC,gBAAiBD,KAAKC,uBAGhC,cAAC,IAAD,CAAO8B,OAAK,EAACE,KAAK,eAAeC,QAC/B,mCACE,cAAC,EAAD,CAAY5B,WAAYN,KAAKH,MAAMS,+B,GAxDnCF,aCAH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.d37e6380.chunk.js","sourcesContent":["export const intros = [\n  \"Can we just talk about \",\n  \"You know what I hate about \",\n  \"Am I the only person who can't stand \",\n  \"Why hasn't Nintendo done anything about \",\n  \"Why does everyone go so crazy for \",\n  \"What's the deal with \",\n  \"Can anyone explain the hype over \",\n  \"Am I crazy, or does every annoying player main \",\n  \"Can we all just agree to ban \",\n  \"Do we REALLY need to keep buffing \",\n  \"Do you have to be a literal idiot to play \"\n]\n\nexport const intros2 = [\n  \"I will literally explode if I have to fight another \",\n  \"Out of all the characters they could have added, of course Nintendo had to choose \",\n  \"I almost had a good day today, but that was all over the second I had to fight \",\n  \"The biggest problem in this community isn't toxicity. It's \",\n  \"I believe most people are good people...that is, unless they main \",\n  \"I hate this game so much. Nintendo had such a good thing going until they decided to add \",\n  \"Ever wondered how you can announce to the entire world that you're a complete idiot? Simple. Play \",\n  \"Tier lists are stupid. Everyone with half a brain knows that the most overpowered character is \",\n  \"I am SO tired of people making excuses for \",\n  \"I normally hate to teabag, but I'll always make an exception for \",\n  \"You know why nobody takes this community seriously? Because people are still maining \"\n]\n\nexport const randomGripe = [\n  \"I mean, what kind of a name is that, anyway? \",\n  \"Seriously, a five-year-old could have picked a better option. \",\n  \"They look dumb, their moves are dumb, and the people who play them are dumb. \",\n  \"Is it a requirement that you have to be a massive edgelord to play them? It sure feels like it. \",\n  \"At this point, I've pretty much lost all respect for Nintendo. \",\n  \"People whine about the $5.99 meta all the time, but you couldn't PAY me to play this character. \",\n  \"Like, I get it. You want to be the protagonist, but we all know you're just a scrub. \",\n  \"I mean, have you seen their FACE? It's almost as ugly as their personality. Almost. \",\n  \"I've put more hours into this game than I can count, and I can CONFIRM that they going to kill it eventually. \",\n  \"I'm just going to say it: I want everyone who plays this character dead. Every last one of them. They deserve it. \",\n  \"But what do I know, right? I'm not a 'real' gamer. I only have a tattoo of Tom Nook ON MY BACK. \"\n]\n\nexport const moveRantintro = [\n  \"For starters, their \",\n  \"I don't even know where to start, but their \",\n\n]\n\nexport const moveRantClause = [\n  \"is WAY too fast for how much damage it does. \",\n  \"covers so much space it's ridiculous. \",\n  \"makes me want to vomit. \",\n  \"hits like a truck and moves like a cheetah. \",\n  \"is over-centralizing to the point where they might as well not have any other moves. \",\n  \"has like NO ending lag. \",\n  \" \"\n]\n","import React from 'react';\nimport App from './App.js';\nimport Rants from './Rants.js';\nimport './RantCard.css';\nimport { intros, intros2, randomGripe } from './data/phrases.js';\nimport { moves } from './data/moves.js';\n\nconst RantCard = (props) => {\n  const { alsoAppearsIn, availability, name, images, saveRant } = props;\n\n  const randomInt = Math.round((Math.random() * 10))\n  const introSwitch = randomInt % 2 + 1;\n  const rantId = Math.round(Math.random() * 100000);\n\n  return (\n    <div className=\"rant-card\" id={rantId}>\n      <div className=\"rant-text-container\">\n        <h3 className=\"character-name\" id=\"characterName\">{props.name}</h3>\n        <div className=\"rant-text\" id=\"rantText\">\n          {introSwitch === 1 && <h4>{intros[randomInt]}{props.name}? {randomGripe[randomInt]}</h4>}\n          {introSwitch === 2 && <h4>{intros2[randomInt]}{props.name}. {randomGripe[randomInt]}</h4>}\n        </div>\n      </div>\n      <button className=\"save-rant-button\" onClick={saveRant}></button>\n    </div>\n  )\n}\n\nexport default RantCard;\n","import App from './App.js';\nimport React from 'react';\nimport RantCard from './RantCard.js';\nimport './Rants.css';\n\nconst Rants = (props) => {\n  const { data, selection, saveRant } = props;\n  const rantCollection = [];\n  const matchingCharacter = data.find( character => character.name === selection);\n  rantCollection.push(matchingCharacter);\n\n  const characterRants = rantCollection.map( character => {\n    if (character) {\n      return (\n        <RantCard\n          characters={data}\n          key={Math.random()}\n          name={character.name}\n          alsoAppearsIn={character.alsoAppearsIn}\n          availability={character.availability}\n          order={character.order}\n          saveRant={saveRant}\n        />\n      )\n    }\n  })\n\n  return (\n    <section className=\"rants-container\">\n      <div className=\"rant-display\">\n        {rantCollection.length && characterRants}\n      </div>\n    </section>\n  )\n}\n\nexport default Rants;\n","export const characterNames = [\n  'Mario',         'Donkey Kong',      'Link',             'Samus',\n  'Dark Samus',    'Yoshi',            'Kirby',            'Fox',\n  'Pikachu',       'Luigi',            'Ness',             'Captain Falcon',\n  'Jigglypuff',    'Peach',            'Daisy',            'Bowser',\n  'Ice Climbers',  'Sheik',            'Zelda',            'Dr. Mario',\n  'Pichu',         'Falco',            'Marth',            'Lucina',\n  'Young Link',    'Ganondorf',        'Mewtwo',           'Roy',\n  'Chrom',         'Mr. Game & Watch', 'Meta Knight',      'Pit',\n  'Dark Pit',      'Zero Suit Samus',  'Wario',            'Snake',\n  'Ike',           'Pokémon Trainer',  'Diddy Kong',       'Lucas',\n  'Sonic',         'King Dedede',      'Olimar',           'Lucario',\n  'R.O.B.',        'Toon Link',        'Wolf',             'Villager',\n  'Mega Man',      'Wii Fit Trainer',  'Rosalina & Luma',  'Little Mac',\n  'Greninja',      'Mii Brawler',      'Mii Swordfighter', 'Mii Gunner',\n  'Palutena',      'Pac-Man',          'Robin',            'Shulk',\n  'Bowser Jr.',    'Duck Hunt',        'Ryu',              'Ken',\n  'Cloud',         'Bayonetta',        'Ridley',           'Simon',\n  'Richter',       'King K. Rool',     'Isabelle',         'Incineroar',\n  'Piranha Plant', 'Joker',            'Hero',             'Banjo & Kazooie',\n  'Terry',         'Byleth',           'Min Min'\n];\n","import React, { Component } from 'react';\nimport './Form.css';\nimport { characterNames } from './data/characterNames';\n\nclass Form extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      characterOptions: [],\n      selectedCharacter: '',\n    }\n  }\n\n  componentDidMount = () => {\n    const characterList = characterNames.map( character => {\n      return (\n        <option value={character} key={Math.random()}> {character}</option>\n      )\n    });\n    this.setState({ characterOptions: characterList });\n  };\n\n\n  render() {\n    return (\n      <div className=\"form-container\" id=\"formContainer\">\n        <form className=\"character-selection-form\" id=\"characterSelectionForm\" onSubmit={this.props.submitCharacter}>\n          <label for=\"character-selection\" className=\"selection-text\">Select a character: </label>\n          <select id=\"select-a-character\" name=\"characters\" className=\"character-dropdown\" id=\"characterDropdown\">\n            {this.state.characterOptions}\n          </select>\n          <div className=\"submit-button-container\">\n            <button type=\"submit\" className=\"submit-character-button\" id=\"submitButton\">MAKE ME RAGE</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nexport default Form;\n","import App, { Component } from 'react';\nimport './SavedRants.css';\nimport './RantCard.css';\n\n\nconst SavedRants = ({savedRants}) => {\n  console.log(savedRants);\n  const savedCards = savedRants.map( card => {\n    return(\n      <div className=\"rant-card\" id={card.id}>\n        <div className=\"rant-text-container\">\n          <h3 className=\"character-name\" id=\"characterName\">{card.name}</h3>\n          <div className=\"rant-text\" id=\"rantText\">\n            {card.text}\n          </div>\n        </div>\n      </div>\n    )\n  });\n\n  return (\n    <div className=\"saved-rants-container\">\n      <section className=\"saved-rants\">\n        {savedCards}\n      </section>\n    </div>\n  )\n}\n\nexport default SavedRants;\n","import './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, NavLink, Routes } from 'react-router-dom';\nimport Rants from './Rants.js';\nimport './Rants.css';\nimport RantCard from './RantCard.js';\nimport './RantCard.css';\nimport Form from './Form.js';\nimport './Form.css';\nimport SavedRants from './SavedRants.js';\nimport './SavedRants.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allCharacters: [],\n      selectedCharacter: '',\n      savedRants: []\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('api/v1/ultimate/characters')\n    .then(response => response.json())\n    .then(data => {\n      const characterData = data;\n      this.setState({ allCharacters: characterData })\n    });\n  }\n\n  submitCharacter = (event) => {\n    event.preventDefault();\n    const characterDropdown = document.getElementById('characterDropdown');\n    const characterToSet = characterDropdown.value;\n    this.setState({ selectedCharacter: characterToSet })\n\n    const characterForm = document.getElementById('formContainer');\n    characterForm.classList.add('shifted');\n  }\n\n  saveRant = (event) => {\n    const card = document.querySelector('.rant-card');\n    const cardId = card.id;\n\n    const characterName = document.getElementById('characterName').innerText;\n    const rantText = document.getElementById('rantText').innerText;\n    let savedRant = { id: (this.state.savedRants.length + 1), name: characterName, text: rantText };\n    this.setState({ savedRants: [...this.state.savedRants, savedRant]})\n  }\n\n  render() {\n    return (\n      <Router>\n        <main>\n          <header>Smash Ultimate Rant Generator</header>\n          <NavLink exact to='/saved-rants' className=\"saved-rants-link navlink\">Saved Rants</NavLink>\n          <NavLink exact to='/' className=\"home-link navlink\">Home</NavLink>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={\n                <>\n                  <Rants data={this.state.allCharacters} selection={this.state.selectedCharacter} saveRant={this.saveRant}/>\n                  <Form submitCharacter={this.submitCharacter} />\n                </>\n                } />\n              <Route exact path=\"/saved-rants\" element={\n                <>\n                  <SavedRants savedRants={this.state.savedRants}/>\n                </>\n                } />\n            </Routes>\n          </div>\n        </main>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}